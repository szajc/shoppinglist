{"version":3,"sources":["assets/toast/toast.js","content/InputBox.js","assets/icons/trashWhite.png","content/DataItems.js","firebaseConfig.js","App.js","reportWebVitals.js","index.js"],"names":["toast","textInput","root","document","getElementById","toastElement","createElement","p","innerHTML","appendChild","className","setTimeout","remove","InputBox","props","useState","input","setInput","ref","useRef","useEffect","current","focus","value","onChange","e","target","onClick","inputData","updates","firebase","database","push","key","update","writeData","item","alreadyBought","DataItems","data","deleteItem","boughtItem","map","style","textDecoration","color","id","src","trashIcon","alt","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","app","initializeApp","App","cartData","setCartData","getDataFirebase","on","snapshot","val","shoppingcart","Object","keys","cancle","itemId","itemName","prevstate","filter","inputItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6fa8ddd8.chunk.js","sourcesContent":["\r\nconst toast = (textInput) => {\r\n    const root = document.getElementById('forToast');\r\n    const toastElement = document.createElement(\"div\"); \r\n    const p = document.createElement(\"p\");\r\n    p.innerHTML = textInput;\r\n    root.appendChild(toastElement);\r\n    toastElement.className = 'toast';\r\n    toastElement.appendChild(p);\r\n\r\n    setTimeout(() => {\r\n        toastElement.remove();\r\n    }, 3000);\r\n}\r\n\r\nexport default toast;","import React, { useState, useRef, useEffect } from 'react';\r\nimport firebase from 'firebase'; // /app or /database\r\nimport toast from '../assets/toast/toast';\r\n\r\nfunction InputBox(props) {\r\n\r\n    const [input, setInput] = useState('');\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        ref.current.focus();\r\n    }, [])\r\n\r\n    function writeData(inputData) {\r\n        let newPostKey = firebase.database().ref('shoppingcart/').push().key;\r\n        const updates = {};\r\n        updates[newPostKey] = inputData;\r\n        return firebase.database().ref('shoppingcart/').update(updates);\r\n    }\r\n\r\n    const sendData = () => {\r\n        if (input === '') {\r\n            return toast('polje je prazno!');\r\n        } else {\r\n            const data = {\r\n                item: input,\r\n                alreadyBought: false,\r\n            }\r\n            writeData(data);\r\n            setInput('');\r\n            toast(`${input} dodan/a!`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"inputContainer\">\r\n            <input\r\n                ref={ref}\r\n                value={input} \r\n                onChange={e => setInput(e.target.value)} \r\n            />\r\n            <button onClick={sendData}>+</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputBox;","export default __webpack_public_path__ + \"static/media/trashWhite.ed34743c.png\";","import React, { Fragment } from 'react';\r\nimport trashIcon from '../assets/icons/trashWhite.png';\r\n\r\nfunction DataItems(props) {\r\n\r\n    const { data, deleteItem, boughtItem } = props;\r\n\r\n    return (\r\n        <Fragment>\r\n        {data && data.map(item => (\r\n            <div \r\n                className=\"item\"\r\n                key={item.id}>\r\n              <div className=\"singleItem\"\r\n                    onClick={() => boughtItem(item)} >\r\n                <p style={{\r\n                        textDecoration: !item.alreadyBought ? 'none' : 'line-through',\r\n                        color: !item.alreadyBought ? '#000' : 'gray'\r\n                    }}>{item.item}</p>\r\n              </div>\r\n              <div \r\n                className=\"itemIcon\"\r\n                onClick={() => deleteItem(item.id, item.item)}>\r\n                <img\r\n                    src={trashIcon} \r\n                    alt=\"\"/>\r\n              </div>\r\n            </div>\r\n            ))\r\n        }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default DataItems;","//import firebase from 'firebase/app';\r\n//import * as firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB55Du7ygSzib1s1F46YLg_BAlbYBydGOM\",\r\n    authDomain: \"shopping-list-31f59.firebaseapp.com\",\r\n    databaseURL: \"https://shopping-list-31f59-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"shopping-list-31f59\",\r\n    storageBucket: \"shopping-list-31f59.appspot.com\",\r\n    messagingSenderId: \"802068066307\",\r\n    appId: \"1:802068066307:web:592edcb0800f7f6dce1e36\",\r\n    measurementId: \"G-8JQ6TF4JF0\"\r\n};\r\nexport default config;\r\n//firebase.initializeApp(config)","import { useState, useEffect } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app'; // /app or /database\nimport 'firebase/database';\nimport InputBox from './content/InputBox';\nimport DataItems from './content/DataItems';\nimport config from \"./firebaseConfig\";\nimport toast from './assets/toast/toast';\n!firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\n\nfunction App() {\n  const [cartData, setCartData] = useState([]);\n\n  const getDataFirebase = () => {\n    const getData = firebase.database().ref('/shoppingcart/');\n    getData.on('value', function(snapshot) {\n      const data = snapshot.val();\n      if (data !== null) {\n        const shoppingcart = Object.keys(data).map( key => {\n          return  {\n            id: key, \n            item: data[key].item,\n            alreadyBought: data[key].alreadyBought, \n          };\n        })\n        setCartData(shoppingcart);\n      }\n    })\n  }\n\n  useEffect(() => {\n    getDataFirebase();\n    return () => {\n      getDataFirebase.cancle();\n    }\n  }, [])\n\n  const deleteItemHandler = (itemId, itemName) => {\n    // delete item from \"cartData\"\n    setCartData(prevstate => {\n      const newData = [...prevstate];\n      return newData.filter(item => item.id !== itemId);\n    });\n    // delete item from DB\n    const removeData = firebase.database().ref('shoppingcart/' + itemId);\n    removeData.remove()\n    toast(`${itemName} odstranjen/a`);\n  }\n\n  const boughtItemHandler = (inputItem) => {\n    // change item from \"cartData\"\n    setCartData(prevstate => {\n      const data = [...prevstate];\n      let newData = data.map(item =>\n        item.id === inputItem.id\n        ? { ...item, alreadyBought: !inputItem.alreadyBought }\n        : item\n      )\n      return newData;\n    })\n    // change item from DB\n    const update = {\n      item: inputItem.item,\n      alreadyBought: !inputItem.alreadyBought\n    }\n    var updates = {};\n    updates[inputItem.id] = update;\n    return firebase.database().ref('shoppingcart/').update(updates);\n  }\n\n  return (\n    <div className=\"mainContainer\" id=\"forToast\">\n      <div className=\"textContainer\">\n        <p>Nakupovalni listek</p>\n      </div>\n      <div className=\"dataContainer\">\n        {\n          cartData && cartData.length > 0 ?\n          <DataItems data={cartData} deleteItem={deleteItemHandler} boughtItem={boughtItemHandler}/> :\n          <p>Va≈° nakupovalni listek je prazen</p>\n        }\n      </div>\n      <InputBox />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}